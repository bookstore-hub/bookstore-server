INFORMATIONS UTILES

L'API proposé couvre normalement l'ensemble des pré-requis. Il va même un peu plus loin en proposant une gestion plus poussée des auteurs.


UTILISATION DES APPLICATIONS BACK / FRONT

Une fois le serveur lancé, les API REST du projet sont accessibles au niveau du backend via Swagger-UI à l'url suivant:
http://localhost:8080/swagger-ui/index.html?configUrl=/v3/api-docs/swagger-config

La programmation front-end n'est pas mon fort, mais j'ai tout de même développé un client basique en React Js, avec l'aide de Chat GPT.
Une fois le client lancé, les urls suivants fournissent:
1. Une liste des livres actuellement présents dans la base de données -> http://localhost:3000/
2. Une interface basique qui permet de tester l'ensemble de l'API -> http://localhost:3000/test-api


SECURITE

La sécurité est complètement désactivée dans l'application puisqu'il n'y a aucun système d'authentification.


BASE DE DONNEES

Il s'agit d'une base de données PostgreSql.
Un backup de la base de données utilisée pour ce travail a été joint au projet, dans le même répertoire que ce fichier.
Vous devrez créer au préalable un utilisateur 'bookstoreadmin' dans postgres avec le bon mot de passe, renseigné dans application.yml:

-- Role: bookstoreadmin
-- DROP ROLE IF EXISTS bookstoreadmin;

CREATE ROLE bookstoreadmin WITH
  LOGIN
  SUPERUSER
  INHERIT
  CREATEDB
  CREATEROLE
  NOREPLICATION
  NOBYPASSRLS
  ENCRYPTED PASSWORD 'SCRAM-SHA-256$4096:ybrf9uNsA5g+RSN+VX1gkA==$co+QVO9gKqv2VSvWiVf9vNH3qfL0DUy+S4Mw8E25Ac4=:VpnciUzCBDqps/3T9Wxj23CrMBDlL3N/ZlogBJ6NNaI=';



  ---

  Pour une quelconque question ou besoin d'information n'hésitez pas à revenir vers moi.